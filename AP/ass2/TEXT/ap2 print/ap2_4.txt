*****************************************************************************************************************************************
NAME    : NAMJOSHI SHUBHAM S.
ROLL NO : 21
CLASS   : MCA-II
SUBJECT : ADVANCED PROGRAMMING(AP)
*****************************************************************************************************************************************
*****************************************************************************************************************************************
Q(4):	Write a program using pointers to implement the transpose of a matrix.

*****************************************************************************************************************************************
#include<stdio.h>
#include<conio.h>

void getdata(int[][3],int,int);
void displaydata(int[][3],int,int);
void transpose(int[][3],int,int,int[][3]);
void main()
{
	int matrix[3][3],tmatrix[3][3],row,column;
	printf("Enter limit of rows and columns: ");
	scanf("%d %d",&row,&column);
	getdata(matrix,row,column);
	transpose(matrix,row,column,tmatrix);
	printf("Transpose of matrix:\n");
	displaydata(tmatrix,row,column);
	getch();
	
}

void getdata(int m[][3],int row,int column)
{
	int i,j,(*mptr)[3];
	mptr=m;
	printf("Enter Matrix:\n");
	for(i=0;i<row;i++)
	{
		for(j=0;j<column;j++)
		{
			scanf("%d",*(mptr)+j);
		}
		mptr++;
	}
}														

void transpose(int m[][3],int row,int column,int tm[][3])
{
	int i,j,(*mptr)[3],(*tmptr)[3];
	mptr=m;tmptr=tm;

	printf("\n\n");
	for(i=0;i<row;i++)
	{
		for(j=0;j<column;j++)
		{
			*(*(tmptr+i)+j)=*(*(mptr+j)+i);
			*(*(tmptr+j)+i)=*(*(mptr+i)+j);;	
		}
	}

}

void displaydata(int m[][3],int row,int column)
{
	int i,j,(*mptr)[3];
	mptr=m;
	for(i=0;i<column;i++)
	{
		for(j=0;j<row;j++)
		{
			printf("%d ",*(*(mptr)+j));
		}
		mptr++;
		printf("\n");
	}
}

*****************************************************************************************************************************************
*****************************************************************************************************************************************
output:

Enter limit of rows and columns: 2 3
Enter Matrix:
1 2 3
4 5 6


Transpose of matrix:
1 4
2 5
3 6


*****************************************************************************************************************************************


